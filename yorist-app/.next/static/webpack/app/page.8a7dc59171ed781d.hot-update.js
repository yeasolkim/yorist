"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertFromSupabaseRecipe: function() { return /* binding */ convertFromSupabaseRecipe; },\n/* harmony export */   convertToSupabaseRecipe: function() { return /* binding */ convertToSupabaseRecipe; },\n/* harmony export */   recipeService: function() { return /* binding */ recipeService; },\n/* harmony export */   supabase: function() { return /* binding */ supabase; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// 환경 변수에서 Supabase 설정 가져오기\nconst supabaseUrl = \"https://rshosgiwnqcvwfnkqdwc.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJzaG9zZ2l3bnFjdndmbmtxZHdjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE2MzMxNjEsImV4cCI6MjA2NzIwOTE2MX0.9yrX80F0-3w0H8u3Qx449oYRpD4vA1wEjEYP7mdylGg\";\n// Supabase 클라이언트 생성\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// 타입 변환 함수들\nconst convertToSupabaseRecipe = (recipe)=>({\n        title: recipe.title,\n        description: recipe.description,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps,\n        videoUrl: recipe.videoUrl,\n        channel: recipe.channel,\n        tags: recipe.tags,\n        isVegetarian: recipe.isVegetarian,\n        isfavorite: recipe.isfavorite\n    });\nconst convertFromSupabaseRecipe = (recipe)=>{\n    var _recipe_isfavorite;\n    return {\n        id: recipe.id,\n        title: recipe.title,\n        description: recipe.description,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps,\n        videoUrl: recipe.videoUrl,\n        channel: recipe.channel,\n        tags: recipe.tags,\n        isVegetarian: recipe.isVegetarian,\n        createdat: new Date(recipe.createdat),\n        isfavorite: (_recipe_isfavorite = recipe.isfavorite) !== null && _recipe_isfavorite !== void 0 ? _recipe_isfavorite : false\n    };\n};\n// 레시피 관련 데이터베이스 함수들\nconst recipeService = {\n    // 모든 레시피 조회\n    async getAllRecipes () {\n        try {\n            const { data, error } = await supabase.from(\"recipes\").select(\"*\").order(\"createdat\", {\n                ascending: false\n            });\n            if (error) {\n                console.error(\"레시피 조회 실패:\", error);\n                throw error;\n            }\n            return (data || []).map(convertFromSupabaseRecipe);\n        } catch (error) {\n            console.error(\"레시피 조회 중 오류 발생:\", error);\n            return [];\n        }\n    },\n    // 단일 레시피 조회\n    async getRecipeById (id) {\n        try {\n            const { data, error } = await supabase.from(\"recipes\").select(\"*\").eq(\"id\", id).single();\n            if (error) {\n                console.error(\"레시피 조회 실패:\", error);\n                return null;\n            }\n            return data ? convertFromSupabaseRecipe(data) : null;\n        } catch (error) {\n            console.error(\"레시피 조회 중 오류 발생:\", error);\n            return null;\n        }\n    },\n    // 새 레시피 추가\n    async createRecipe (recipe) {\n        try {\n            const { data, error } = await supabase.from(\"recipes\").insert([\n                {\n                    ...recipe,\n                    createdat: new Date().toISOString(),\n                    isfavorite: false\n                }\n            ]).select().single();\n            if (error) {\n                console.error(\"레시피 생성 실패:\", error);\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.error(\"레시피 생성 중 오류 발생:\", error);\n            return null;\n        }\n    },\n    // 레시피 수정\n    async updateRecipe (id, recipe) {\n        try {\n            const { data, error } = await supabase.from(\"recipes\").update({\n                ...recipe,\n                updated_at: new Date().toISOString()\n            }).eq(\"id\", id).select().single();\n            if (error) {\n                console.error(\"레시피 수정 실패:\", error);\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.error(\"레시피 수정 중 오류 발생:\", error);\n            return null;\n        }\n    },\n    // 레시피 삭제\n    async deleteRecipe (id) {\n        try {\n            const { error } = await supabase.from(\"recipes\").delete().eq(\"id\", id);\n            if (error) {\n                console.error(\"레시피 삭제 실패:\", error);\n                throw error;\n            }\n            return true;\n        } catch (error) {\n            console.error(\"레시피 삭제 중 오류 발생:\", error);\n            return false;\n        }\n    },\n    // 제목으로 레시피 검색\n    async searchRecipes (searchTerm) {\n        try {\n            const { data, error } = await supabase.from(\"recipes\").select(\"*\").ilike(\"title\", \"%\".concat(searchTerm, \"%\")).order(\"createdat\", {\n                ascending: false\n            });\n            if (error) {\n                console.error(\"레시피 검색 실패:\", error);\n                throw error;\n            }\n            return (data || []).map(convertFromSupabaseRecipe);\n        } catch (error) {\n            console.error(\"레시피 검색 중 오류 발생:\", error);\n            return [];\n        }\n    },\n    // 즐겨찾기 토글\n    async toggleFavorite (id, isFavorite) {\n        try {\n            const { error } = await supabase.from(\"recipes\").update({\n                isfavorite: isFavorite\n            }).eq(\"id\", id);\n            if (error) {\n                console.error(\"즐겨찾기 토글 실패:\", error);\n                throw error;\n            }\n            return true;\n        } catch (error) {\n            console.error(\"즐겨찾기 토글 중 오류 발생:\", error);\n            return false;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/supabase.ts\n"));

/***/ })

});