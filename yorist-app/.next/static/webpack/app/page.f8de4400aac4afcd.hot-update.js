"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/recipeUtils.ts":
/*!********************************!*\
  !*** ./src/lib/recipeUtils.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteRecipe: function() { return /* binding */ deleteRecipe; },\n/* harmony export */   getAllIngredientNames: function() { return /* binding */ getAllIngredientNames; },\n/* harmony export */   getAllIngredientsWithShopUrl: function() { return /* binding */ getAllIngredientsWithShopUrl; },\n/* harmony export */   getFavoriteRecipes: function() { return /* binding */ getFavoriteRecipes; },\n/* harmony export */   getRecipeById: function() { return /* binding */ getRecipeById; },\n/* harmony export */   getRecipes: function() { return /* binding */ getRecipes; },\n/* harmony export */   getRecipesAsync: function() { return /* binding */ getRecipesAsync; },\n/* harmony export */   saveRecipe: function() { return /* binding */ saveRecipe; },\n/* harmony export */   toggleRecipeFavorite: function() { return /* binding */ toggleRecipeFavorite; },\n/* harmony export */   updateRecipe: function() { return /* binding */ updateRecipe; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\n// Supabase와 localStorage 간 타입 변환 함수\nconst convertToSupabaseRecipe = (recipe)=>({\n        title: recipe.title,\n        description: recipe.description,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps,\n        videoUrl: recipe.videoUrl,\n        channel: recipe.channel,\n        tags: recipe.tags,\n        isVegetarian: recipe.isVegetarian,\n        isFavorite: recipe.isFavorite\n    });\nconst convertFromSupabaseRecipe = (recipe)=>{\n    var _recipe_isFavorite;\n    return {\n        id: recipe.id,\n        title: recipe.title,\n        description: recipe.description,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps,\n        videoUrl: recipe.videoUrl,\n        channel: recipe.channel,\n        tags: recipe.tags,\n        isVegetarian: recipe.isVegetarian,\n        createdAt: new Date(recipe.createdAt),\n        isFavorite: (_recipe_isFavorite = recipe.isFavorite) !== null && _recipe_isFavorite !== void 0 ? _recipe_isFavorite : false\n    };\n};\n// localStorage 폴백용 (Supabase 연결 실패 시)\nconst RECIPES_STORAGE_KEY = \"yorist_recipes\";\n// localStorage 안전 접근 함수\nconst safeLocalStorage = {\n    get: (key)=>{\n        try {\n            return localStorage.getItem(key);\n        } catch (e) {\n            return null;\n        }\n    },\n    set: (key, value)=>{\n        try {\n            localStorage.setItem(key, value);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n};\n// 고유 ID 생성 함수\nconst generateId = ()=>\"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n// 레시피 저장 (Supabase 우선, localStorage 폴백)\nconst saveRecipe = async (recipe)=>{\n    try {\n        // Supabase에 저장 시도\n        const supabaseRecipe = convertToSupabaseRecipe(recipe);\n        const savedRecipe = await _supabase__WEBPACK_IMPORTED_MODULE_0__.recipeService.createRecipe(supabaseRecipe);\n        if (savedRecipe) {\n            console.log(\"Supabase에 레시피 저장 성공:\", savedRecipe.id);\n            return true;\n        }\n        // Supabase 실패 시 localStorage 폴백\n        console.warn(\"Supabase 저장 실패, localStorage로 폴백\");\n        const existingRecipes = getRecipes();\n        var _recipe_isFavorite;\n        const newRecipe = {\n            ...recipe,\n            id: recipe.id || generateId(),\n            createdAt: recipe.createdAt || new Date().toISOString(),\n            isFavorite: (_recipe_isFavorite = recipe.isFavorite) !== null && _recipe_isFavorite !== void 0 ? _recipe_isFavorite : false\n        };\n        const updatedRecipes = [\n            newRecipe,\n            ...existingRecipes\n        ];\n        return safeLocalStorage.set(RECIPES_STORAGE_KEY, JSON.stringify(updatedRecipes));\n    } catch (error) {\n        console.error(\"레시피 저장 실패:\", error);\n        return false;\n    }\n};\n// 모든 레시피 조회 (localStorage 동기 버전 - 기존 호환성)\nconst getRecipes = ()=>{\n    try {\n        const data = safeLocalStorage.get(RECIPES_STORAGE_KEY);\n        return data ? JSON.parse(data) : [];\n    } catch (error) {\n        console.error(\"레시피 조회 실패:\", error);\n        return [];\n    }\n};\n// 모든 레시피 조회 (Supabase 우선, localStorage 폴백)\nconst getRecipesAsync = async ()=>{\n    try {\n        // Supabase에서 조회 시도\n        const supabaseRecipes = await _supabase__WEBPACK_IMPORTED_MODULE_0__.recipeService.getAllRecipes();\n        if (supabaseRecipes.length > 0) {\n            console.log(\"Supabase에서 레시피 조회 성공:\", supabaseRecipes.length);\n            return supabaseRecipes.map(convertFromSupabaseRecipe);\n        }\n        // Supabase 실패 시 localStorage 폴백\n        console.warn(\"Supabase 조회 실패, localStorage로 폴백\");\n        const data = safeLocalStorage.get(RECIPES_STORAGE_KEY);\n        return data ? JSON.parse(data) : [];\n    } catch (error) {\n        console.error(\"레시피 조회 실패:\", error);\n        // localStorage 폴백\n        try {\n            const data = safeLocalStorage.get(RECIPES_STORAGE_KEY);\n            return data ? JSON.parse(data) : [];\n        } catch (e) {\n            return [];\n        }\n    }\n};\n// 특정 레시피 조회\nconst getRecipeById = (id)=>{\n    try {\n        const recipes = getRecipes();\n        return recipes.find((recipe)=>recipe.id === id) || null;\n    } catch (error) {\n        console.error(\"레시피 조회 실패:\", error);\n        return null;\n    }\n};\n// 레시피 삭제\nconst deleteRecipe = (recipeId)=>{\n    try {\n        const existingRecipes = getRecipes();\n        const updatedRecipes = existingRecipes.filter((recipe)=>recipe.id !== recipeId);\n        return safeLocalStorage.set(RECIPES_STORAGE_KEY, JSON.stringify(updatedRecipes));\n    } catch (error) {\n        console.error(\"레시피 삭제 실패:\", error);\n        return false;\n    }\n};\n// 레시피 업데이트\nconst updateRecipe = (recipeId, updates)=>{\n    try {\n        const existingRecipes = getRecipes();\n        const updatedRecipes = existingRecipes.map((recipe)=>recipe.id === recipeId ? {\n                ...recipe,\n                ...updates\n            } : recipe);\n        return safeLocalStorage.set(RECIPES_STORAGE_KEY, JSON.stringify(updatedRecipes));\n    } catch (error) {\n        console.error(\"레시피 업데이트 실패:\", error);\n        return false;\n    }\n};\n// 즐겨찾기 토글\nconst toggleRecipeFavorite = (recipeId)=>{\n    try {\n        const existingRecipes = getRecipes();\n        const updatedRecipes = existingRecipes.map((recipe)=>recipe.id === recipeId ? {\n                ...recipe,\n                isFavorite: !recipe.isFavorite\n            } : recipe);\n        return safeLocalStorage.set(RECIPES_STORAGE_KEY, JSON.stringify(updatedRecipes));\n    } catch (error) {\n        console.error(\"즐겨찾기 토글 실패:\", error);\n        return false;\n    }\n};\n// 모든 레시피의 재료(이름, shopUrl) 중복 없이 집계\nconst getAllIngredientsWithShopUrl = ()=>{\n    try {\n        const recipes = getRecipes();\n        const ingredientMap = new Map();\n        recipes.forEach((recipe)=>{\n            recipe.ingredients.forEach((ingredient)=>{\n                if (!ingredientMap.has(ingredient.name)) {\n                    ingredientMap.set(ingredient.name, ingredient.shopUrl);\n                }\n            });\n        });\n        return Array.from(ingredientMap.entries()).map((param)=>{\n            let [name, shopUrl] = param;\n            return {\n                name,\n                shopUrl\n            };\n        });\n    } catch (error) {\n        console.error(\"재료 정보 조회 실패:\", error);\n        return [];\n    }\n};\n// 모든 레시피의 재료(이름) 중복 없이 집계\nconst getAllIngredientNames = ()=>{\n    try {\n        const recipes = getRecipes();\n        const ingredientNames = new Set();\n        recipes.forEach((recipe)=>{\n            recipe.ingredients.forEach((ingredient)=>{\n                ingredientNames.add(ingredient.name);\n            });\n        });\n        return Array.from(ingredientNames);\n    } catch (error) {\n        console.error(\"재료 이름 조회 실패:\", error);\n        return [];\n    }\n};\n// 즐겨찾기 레시피만 조회\nconst getFavoriteRecipes = ()=>{\n    try {\n        const recipes = getRecipes();\n        return recipes.filter((recipe)=>recipe.isFavorite);\n    } catch (error) {\n        console.error(\"즐겨찾기 레시피 조회 실패:\", error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/recipeUtils.ts\n"));

/***/ })

});