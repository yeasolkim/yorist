"use strict";(()=>{var e={};e.id=221,e.ids=[221],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4382:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>m,originalPathname:()=>j,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>g});var o={};r.r(o),r.d(o,{POST:()=>c});var s=r(5419),n=r(9108),a=r(9678),i=r(8070);let p=process.env.OPENAI_API_KEY;async function c(e){try{var t;let{youtubeUrl:r}=await e.json();if(!r||"string"!=typeof r)return i.Z.json({error:"유효한 유튜브 링크를 입력하세요."},{status:400});let o=await fetch(`${process.env.NEXT_PUBLIC_BASE_URL||""}/api/youtube-transcript`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({youtubeUrl:r})}),s=await o.json();if(!o.ok||!s.transcript)return i.Z.json({error:s.error||"자막 추출에 실패했습니다."},{status:500});let n=(t=s.transcript,`아래 유튜브 영상의 자막을 분석해서, 요리 레시피 데이터를 json 형식으로 만들어줘.
json에는 title(제목), description(설명), ingredients(재료 배열: {name, amount, unit, shopUrl}), steps(조리 단계 배열: {description}), videoUrl(유튜브 링크), channel(채널명) 필드가 포함되어야 해.
다른 설명 없이 json 데이터만 출력해줘.

유튜브 링크: ${r}

자막:
${t}`);if(!p)return i.Z.json({error:"OpenAI API 키가 설정되어 있지 않습니다."},{status:500});let a=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${p}`},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"system",content:"너는 요리 레시피 json을 생성하는 전문가야."},{role:"user",content:n}],max_tokens:1200,temperature:.2})}),c=await a.json();if(!a.ok||!c.choices||!c.choices[0]?.message?.content)return i.Z.json({error:c.error?.message||"레시피 생성에 실패했습니다."},{status:500});let u=c.choices[0].message.content.trim();u.startsWith("```")&&(u=u.replace(/^```(json)?/i,"").replace(/```$/,"").trim());try{let e=JSON.parse(u);return i.Z.json({recipe:e})}catch(e){return i.Z.json({error:"GPT 응답에서 JSON 파싱에 실패했습니다.",raw:u},{status:500})}}catch(e){return i.Z.json({error:"요청 처리 중 오류가 발생했습니다."},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/generate-recipe/route",pathname:"/api/generate-recipe",filename:"route",bundlePath:"app/api/generate-recipe/route"},resolvedPagePath:"/Users/yeasolkim/Documents/GitHub/yorist/yorist-app/src/app/api/generate-recipe/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:h,headerHooks:m,staticGenerationBailout:g}=u,j="/api/generate-recipe/route";function y(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,206],()=>r(4382));module.exports=o})();